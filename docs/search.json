[
  {
    "objectID": "Tarea.html",
    "href": "Tarea.html",
    "title": "Replicando gr치ficos de Plotly",
    "section": "",
    "text": "Utilice este Notebook para replicar cualquiera de los gr치ficos financieros de la gu칤a de Plotly (Ver 游녤 aqu칤)\n\n\nimport plotly.express as px\ndata_canada = px.data.gapminder().query(\"country == 'Canada'\")\nfig = px.bar(data_canada, x='year', y='pop')\nfig.show()\n\n                                                \n\n\n\nTrate de ver e interpretar los datos del DataFrame. Utlice las funciones que hemos visto en clase, por ejemplo: min, max, mean, median, quantile, corrobore los datos con la funci칩n describe.\n\n\n! pip install wquantiles\n\nDefaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: wquantiles in /home/rstudio/.local/lib/python3.10/site-packages (0.6)\nRequirement already satisfied: numpy&gt;=1.18 in /home/rstudio/.local/lib/python3.10/site-packages (from wquantiles) (2.0.0)\n\n\n\ndata_canada = px.data.gapminder().query(\"country == 'Canada'\")\ndata_canada\n\n\n\n\n\n\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\niso_alpha\niso_num\n\n\n\n\n240\nCanada\nAmericas\n1952\n68.750\n14785584\n11367.16112\nCAN\n124\n\n\n241\nCanada\nAmericas\n1957\n69.960\n17010154\n12489.95006\nCAN\n124\n\n\n242\nCanada\nAmericas\n1962\n71.300\n18985849\n13462.48555\nCAN\n124\n\n\n243\nCanada\nAmericas\n1967\n72.130\n20819767\n16076.58803\nCAN\n124\n\n\n244\nCanada\nAmericas\n1972\n72.880\n22284500\n18970.57086\nCAN\n124\n\n\n245\nCanada\nAmericas\n1977\n74.210\n23796400\n22090.88306\nCAN\n124\n\n\n246\nCanada\nAmericas\n1982\n75.760\n25201900\n22898.79214\nCAN\n124\n\n\n247\nCanada\nAmericas\n1987\n76.860\n26549700\n26626.51503\nCAN\n124\n\n\n248\nCanada\nAmericas\n1992\n77.950\n28523502\n26342.88426\nCAN\n124\n\n\n249\nCanada\nAmericas\n1997\n78.610\n30305843\n28954.92589\nCAN\n124\n\n\n250\nCanada\nAmericas\n2002\n79.770\n31902268\n33328.96507\nCAN\n124\n\n\n251\nCanada\nAmericas\n2007\n80.653\n33390141\n36319.23501\nCAN\n124\n\n\n\n\n\n\n\n\ndata_canada.describe()\n\n\n\n\n\n\n\n\nyear\nlifeExp\npop\ngdpPercap\niso_num\n\n\n\n\ncount\n12.000000\n12.000000\n1.200000e+01\n12.000000\n12.0\n\n\nmean\n1979.500000\n74.902750\n2.446297e+07\n22410.746340\n124.0\n\n\nstd\n18.027756\n3.952871\n5.940793e+06\n8210.112789\n0.0\n\n\nmin\n1952.000000\n68.750000\n1.478558e+07\n11367.161120\n124.0\n\n\n25%\n1965.750000\n71.922500\n2.036129e+07\n15423.062410\n124.0\n\n\n50%\n1979.500000\n74.985000\n2.449915e+07\n22494.837600\n124.0\n\n\n75%\n1993.250000\n78.115000\n2.896909e+07\n27208.617745\n124.0\n\n\nmax\n2007.000000\n80.653000\n3.339014e+07\n36319.235010\n124.0\n\n\n\n\n\n\n\n\ndata_canada.min()\n\ncountry           Canada\ncontinent       Americas\nyear                1952\nlifeExp            68.75\npop             14785584\ngdpPercap    11367.16112\niso_alpha            CAN\niso_num              124\ndtype: object\n\n\n\ndata_canada.max()\n\ncountry           Canada\ncontinent       Americas\nyear                2007\nlifeExp           80.653\npop             33390141\ngdpPercap    36319.23501\niso_alpha            CAN\niso_num              124\ndtype: object\n\n\n\ndata_canada[['year','lifeExp','pop','gdpPercap','iso_num']].quantile([0.25, 0.5, 0.75])\n\n\n\n\n\n\n\n\nyear\nlifeExp\npop\ngdpPercap\niso_num\n\n\n\n\n0.25\n1965.75\n71.9225\n20361287.50\n15423.062410\n124.0\n\n\n0.50\n1979.50\n74.9850\n24499150.00\n22494.837600\n124.0\n\n\n0.75\n1993.25\n78.1150\n28969087.25\n27208.617745\n124.0\n\n\n\n\n\n\n\n\ndata_canada[['year','lifeExp','pop','gdpPercap','iso_num']].mean()\n\nyear         1.979500e+03\nlifeExp      7.490275e+01\npop          2.446297e+07\ngdpPercap    2.241075e+04\niso_num      1.240000e+02\ndtype: float64\n\n\n\ndata_canada[['year','lifeExp','pop','gdpPercap','iso_num']].median()\n\nyear         1.979500e+03\nlifeExp      7.498500e+01\npop          2.449915e+07\ngdpPercap    2.249484e+04\niso_num      1.240000e+02\ndtype: float64\n\n\n\nCon los datos de los ejemplos en plotly (es decir, alguno de los DataFrame), trate de crear:\n\nUn gr치fico de caja.\nUn gr치fico de histograma.\nTrate de utiliza la funci칩n pandas.cut para crear 10 segmentos o contenedores (use la propiedad bin).\n\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\nA침os = data_canada['lifeExp'] / 1_000_000\n\n\nbinned_years = pd.cut(A침os, bins=10)\nbinned_years.value_counts(sort=False)\n\nlifeExp\n(6.87e-05, 6.99e-05]    1\n(6.99e-05, 7.11e-05]    1\n(7.11e-05, 7.23e-05]    2\n(7.23e-05, 7.35e-05]    1\n(7.35e-05, 7.47e-05]    1\n(7.47e-05, 7.59e-05]    1\n(7.59e-05, 7.71e-05]    1\n(7.71e-05, 7.83e-05]    1\n(7.83e-05, 7.95e-05]    1\n(7.95e-05, 8.07e-05]    2\nName: count, dtype: int64\n\n\n\nax = A침os.plot.hist(figsize=(4, 4), title = 'Expectativa de vida en A침os')\nax.set_xlabel('A침o')\n\nText(0.5, 0, 'A침o')\n\n\n\n\n\n\n\n\n\n\nax = A침os.plot.box()\nax.set_title(\"Expectativa de Vida en A침os\")\nax.set_ylabel(\"A침os\")\n\nText(0, 0.5, 'A침os')"
  }
]